/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.form;

import constant.MyServerConstants;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import threads.ServerThread;

/**
 *
 * @author Sara
 */
public class FrmServer extends javax.swing.JFrame {

    private ServerThread serverThread;

    /**
     * Creates new form FrmServer
     */
    public FrmServer() {
        initComponents();
        setLocationRelativeTo(null);
        pnlServer.setVisible(true);
        pnlConfiguration.setVisible(false);
        btnStopServer.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        pnlSideMenu = new javax.swing.JPanel();
        btnServer = new javax.swing.JButton();
        btnConfuguration = new javax.swing.JButton();
        pnlTop = new javax.swing.JPanel();
        pnlRight = new javax.swing.JPanel();
        pnlServer = new javax.swing.JPanel();
        btnStartServer = new javax.swing.JButton();
        btnStopServer = new javax.swing.JButton();
        pnlConfiguration = new javax.swing.JPanel();
        pnlServerProperties = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPortServera = new javax.swing.JTextField();
        btnSaveConfigServer = new javax.swing.JButton();
        pnlDbProperties = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtURL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSaveConfigDb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));

        pnlSideMenu.setBackground(new java.awt.Color(0, 0, 0));

        btnServer.setBackground(new java.awt.Color(59, 56, 54));
        btnServer.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        btnServer.setForeground(new java.awt.Color(255, 255, 255));
        btnServer.setText("Server");
        btnServer.setBorder(null);
        btnServer.setBorderPainted(false);
        btnServer.setFocusPainted(false);
        btnServer.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServerActionPerformed(evt);
            }
        });

        btnConfuguration.setBackground(new java.awt.Color(59, 56, 54));
        btnConfuguration.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        btnConfuguration.setForeground(new java.awt.Color(255, 255, 255));
        btnConfuguration.setText("Konfiguracija");
        btnConfuguration.setBorder(null);
        btnConfuguration.setBorderPainted(false);
        btnConfuguration.setFocusPainted(false);
        btnConfuguration.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnConfuguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfugurationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSideMenuLayout = new javax.swing.GroupLayout(pnlSideMenu);
        pnlSideMenu.setLayout(pnlSideMenuLayout);
        pnlSideMenuLayout.setHorizontalGroup(
            pnlSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnConfuguration, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );
        pnlSideMenuLayout.setVerticalGroup(
            pnlSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSideMenuLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(btnServer, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfuguration, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
        );

        pnlTop.setBackground(new java.awt.Color(54, 125, 189));

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 125, Short.MAX_VALUE)
        );

        pnlRight.setBackground(new java.awt.Color(255, 255, 255));

        pnlServer.setBackground(new java.awt.Color(255, 255, 255));

        btnStartServer.setText("Pokreni server");
        btnStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServerActionPerformed(evt);
            }
        });

        btnStopServer.setText("Zaustavi server");
        btnStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlServerLayout = new javax.swing.GroupLayout(pnlServer);
        pnlServer.setLayout(pnlServerLayout);
        pnlServerLayout.setHorizontalGroup(
            pnlServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlServerLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 227, Short.MAX_VALUE)
                .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        pnlServerLayout.setVerticalGroup(
            pnlServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlServerLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartServer)
                    .addComponent(btnStopServer))
                .addContainerGap(382, Short.MAX_VALUE))
        );

        pnlConfiguration.setBackground(new java.awt.Color(255, 255, 255));

        pnlServerProperties.setBackground(new java.awt.Color(255, 255, 255));
        pnlServerProperties.setBorder(javax.swing.BorderFactory.createTitledBorder("Konfiguracije za Server"));

        jLabel4.setText("Port servera:");

        btnSaveConfigServer.setText("Sacuvaj");
        btnSaveConfigServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConfigServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlServerPropertiesLayout = new javax.swing.GroupLayout(pnlServerProperties);
        pnlServerProperties.setLayout(pnlServerPropertiesLayout);
        pnlServerPropertiesLayout.setHorizontalGroup(
            pnlServerPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlServerPropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlServerPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlServerPropertiesLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtPortServera, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlServerPropertiesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSaveConfigServer)))
                .addContainerGap())
        );
        pnlServerPropertiesLayout.setVerticalGroup(
            pnlServerPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlServerPropertiesLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pnlServerPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPortServera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSaveConfigServer)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlDbProperties.setBackground(new java.awt.Color(255, 255, 255));
        pnlDbProperties.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Konfiguracije za Bazu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        jLabel1.setText("URL:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        btnSaveConfigDb.setText("Sacuvaj");
        btnSaveConfigDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConfigDbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDbPropertiesLayout = new javax.swing.GroupLayout(pnlDbProperties);
        pnlDbProperties.setLayout(pnlDbPropertiesLayout);
        pnlDbPropertiesLayout.setHorizontalGroup(
            pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDbPropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDbPropertiesLayout.createSequentialGroup()
                        .addGroup(pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword)
                            .addComponent(txtURL)
                            .addComponent(txtUsername)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDbPropertiesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSaveConfigDb)))
                .addContainerGap())
        );
        pnlDbPropertiesLayout.setVerticalGroup(
            pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDbPropertiesLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlDbPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSaveConfigDb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlConfigurationLayout = new javax.swing.GroupLayout(pnlConfiguration);
        pnlConfiguration.setLayout(pnlConfigurationLayout);
        pnlConfigurationLayout.setHorizontalGroup(
            pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlServerProperties, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDbProperties, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlConfigurationLayout.setVerticalGroup(
            pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDbProperties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlServerProperties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlRightLayout = new javax.swing.GroupLayout(pnlRight);
        pnlRight.setLayout(pnlRightLayout);
        pnlRightLayout.setHorizontalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlConfiguration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRightLayout.setVerticalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlServer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlConfiguration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addComponent(pnlSideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnlSideMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServerActionPerformed
        setPnlServer();
    }//GEN-LAST:event_btnServerActionPerformed

    private void btnConfugurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfugurationActionPerformed
        setPnlConfiguration();
    }//GEN-LAST:event_btnConfugurationActionPerformed

    private void btnStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServerActionPerformed
        if (serverThread == null || !serverThread.isAlive()) {
            try {
                serverThread = new ServerThread();
                serverThread.start();

                btnStartServer.setEnabled(false);
                btnStopServer.setEnabled(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnStartServerActionPerformed

    private void btnStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopServerActionPerformed
        if (serverThread != null || serverThread.getServerSocket().isBound()) {
            try {
                serverThread.getServerSocket().close();

                btnStartServer.setEnabled(true);
                btnStopServer.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnStopServerActionPerformed

    private void btnSaveConfigDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConfigDbActionPerformed
        try {
            Properties properties = new Properties();
            properties.load(new FileInputStream("config/dbconfig.properties"));

            String url = txtURL.getText().trim();
            properties.setProperty(MyServerConstants.DB_CONFIG_URL, url);

            String username = txtUsername.getText().trim();
            properties.setProperty(MyServerConstants.DB_CONFIG_USERNAME, username);

            String password = txtPassword.getText().trim();
            properties.setProperty(MyServerConstants.DB_CONFIG_PASSWORD, password);

            properties.store(new FileOutputStream("config/dbconfig.properties"), null);

            JOptionPane.showMessageDialog(this, "Promenjeni konfiguracioni podaci za bazu!");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveConfigDbActionPerformed

    private void btnSaveConfigServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConfigServerActionPerformed

        if (!serverThread.getServerSocket().isClosed()) {
            JOptionPane.showMessageDialog(this, "Server je pokrenut...");
            return;
        }

        try {
            Properties properties = new Properties();
            properties.load(new FileInputStream("config/server.properties"));

            String portServera = txtPortServera.getText().trim();
            properties.setProperty(MyServerConstants.SERVER_CONFIG_PORT, portServera);

            properties.store(new FileOutputStream("config/server.properties"), null);

            JOptionPane.showMessageDialog(this, "Promenjen port!");

        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex);
        }

    }//GEN-LAST:event_btnSaveConfigServerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfuguration;
    private javax.swing.JButton btnSaveConfigDb;
    private javax.swing.JButton btnSaveConfigServer;
    private javax.swing.JButton btnServer;
    private javax.swing.JButton btnStartServer;
    private javax.swing.JButton btnStopServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlConfiguration;
    private javax.swing.JPanel pnlDbProperties;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JPanel pnlServer;
    private javax.swing.JPanel pnlServerProperties;
    private javax.swing.JPanel pnlSideMenu;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPortServera;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void setPnlServer() {
        pnlServer.setVisible(true);
        pnlConfiguration.setVisible(false);
    }

    private void setPnlConfiguration() {
        pnlServer.setVisible(false);
        pnlConfiguration.setVisible(true);

        try {
            Properties properties = new Properties();
            properties.load(new FileInputStream("config/server.properties"));

            String portServera = properties.getProperty(MyServerConstants.SERVER_CONFIG_PORT);
            txtPortServera.setText(portServera);

        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex);
        }

        try {
            Properties properties = new Properties();
            properties.load(new FileInputStream("config/dbconfig.properties"));

            String url = properties.getProperty(MyServerConstants.DB_CONFIG_URL);
            txtURL.setText(url);

            String username = properties.getProperty(MyServerConstants.DB_CONFIG_USERNAME);
            txtUsername.setText(username);

            String password = properties.getProperty(MyServerConstants.DB_CONFIG_PASSWORD);
            txtPassword.setText(password);

        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex);
        }
    }
}
